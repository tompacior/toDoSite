"use strict";!function(){var s=null,c=null,f=null,o=null,n=null,a=null,d=null;function i(){this.myRequest="http://localhost:3000/toDoTask",this.jsonObject={title:"",text:"",id:0,date:0,time:0}}document.addEventListener("DOMContentLoaded",function(e){function t(){for(var e=new i;f.firstChild;)f.removeChild(f.firstChild);e.GET("")}s=document.querySelector(".toDoNew__input"),c=document.querySelector(".toDoNew__textarea"),f=document.querySelector(".toDoItems"),o=document.querySelector(".toDoNew"),n=document.querySelector(".toDoSearch"),a=document.querySelector(".toDoSearch__input"),d=document.querySelector(".toDoWorks__btn"),t(),o.addEventListener("submit",function(e){e.preventDefault(),console.log("Pobrane dane z DOM: ",s.value," Text: ",c.value);var t=new i,o=new Date,n="".concat(o.getDate(),".").concat(o.getMonth()+1,".").concat(o.getFullYear()),a="".concat(o.getHours(),":").concat(o.getMinutes());if(console.log(" Data: ",n),console.log("Time: ",a),t.validate(s.value,c.value,n,a)){for(;f.firstChild;)f.removeChild(f.firstChild);t.POST(),s.value="",c.value=""}else alert("Wpisz poprawne dane!")}),n.addEventListener("submit",function(e){e.preventDefault();var t=new i;if(console.log("Szukaj: ",a.value),""!==a.value){for(;f.firstChild;)f.removeChild(f.firstChild);t.GET("?q=".concat(a.value))}}),d.addEventListener("click",t),document.addEventListener("click",function(e){"task__clean-btn"===e.target.className&&(console.log("Usuwam zadanie: ",e.srcElement.id),(new i).DELETE("/".concat(e.srcElement.id)),t())})}),i.prototype.validate=function(e,t,o,n){return console.log("uruchomiona  Validate"),!(""===e&""===t)&&(this.jsonObject.title=e,this.jsonObject.text=t,this.jsonObject.date=o,this.jsonObject.time=n,!0)},i.prototype.addTask=function(e){this.jsonObject.title=e.title,this.jsonObject.text=e.text,this.jsonObject.id=e.id,this.jsonObject.date=e.date,this.jsonObject.time=e.time;var t=document.createElement("article");t.classList.add("task"),t.id=this.jsonObject.id;var o=document.createElement("div");o.classList.add("task__header");var n=document.createElement("div");n.classList.add("task__text");var a=document.createElement("div");a.classList.add("task__clear-both"),t.appendChild(o),t.appendChild(a),t.appendChild(n),f.appendChild(t);var s=document.createElement("div");s.classList.add("task__title");var c=document.createElement("h3"),d=document.createTextNode(this.jsonObject.title);c.appendChild(d),s.appendChild(c);var i=document.createElement("div");i.classList.add("task__clean");var l=document.createElement("button");l.classList.add("task__clean-btn"),l.id=this.jsonObject.id;var r=document.createTextNode("Usu≈Ñ");l.appendChild(r),i.appendChild(l);var u=document.createElement("div");u.classList.add("task__date");var h=document.createTextNode(this.jsonObject.date);u.appendChild(h);var m=document.createElement("div");m.classList.add("task__time");var p=document.createTextNode(this.jsonObject.time);m.appendChild(p);var v=document.createElement("P"),j=document.createTextNode(this.jsonObject.text);v.appendChild(j),o.appendChild(s),o.appendChild(i),o.appendChild(m),o.appendChild(u),n.appendChild(v),console.log("Finish task - AddTask")},i.prototype.POST=function(){var t=this;fetch(this.myRequest,{method:"post",headers:{"Content-type":"application/json; charset=UTF-8"},body:JSON.stringify(this.jsonObject)}).then(function(e){return e.json()}).then(function(e){console.log("We send:"),console.log(e),t.GET("")})},i.prototype.DELETE=function(e){fetch(this.myRequest+e,{method:"delete"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){console.log("Respond GET: ",e)}).catch(function(e){404===e.status?console.log("Error: 404 Not Found"):400===e.status?console.log("Error: 400 Bad Request! Incorrect request ups..."):console.log("Other error: ",e.status)})},i.prototype.GET=function(e){var o=this;fetch(this.myRequest+e).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){console.log("Respond GET: ",e);for(var t=0;t<e.length;t++)o.addTask(e[t])}).catch(function(e){404===e.status?console.log("Error: 404 Not Found"):400===e.status?console.log("Error: 400 Bad Request! Incorrect request ups..."):console.log("Other error: ",e.status)})}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
